#pragma kernel CaseNumber
#include "Utility.compute"

RWTexture2D<float4> CaseNumber_Texture;
RWStructuredBuffer<float> CaseNumber_Floats;

float calculateCaseNumber(uint3 id)
{
	float caseNumber = 0;
	float3 idAsFloat = float3(id.x, id.y, id.z);

	for (int i = 0; i < 8; i++) {
		float3 input = takeSample(id + CubeOffSets[i]);
		if ((input.x >= 0)) {
			caseNumber += pow(2,i);
		}
	}
	return caseNumber;
}

[numthreads(8,8,8)]
void CaseNumber(uint3 id : SV_DispatchThreadID)
{
	CaseNumber_Texture[imageIndexing(id)] =     calculateCaseNumber(id) / 255;
	CaseNumber_Floats[idIndexing(id)] = calculateCaseNumber(id) / 1;
}
