#pragma kernel LerpField
#include "Utility.compute"

RWTexture2D<float4> Result;

float lerpField(uint3 id, int side) {
	float a = takeSample(id);
	float b = takeSample(id + CubeOffSets[side]);
	float zeroCheck = ((b - a == 0) ? 1 : 0);
	float c = lerp(0.0f, 1.0f, a / abs(b - a));
	return c;
}

static const int xs = 3;
static const int ys = 1;
static const int zs = 4;

float lerpForImage(uint3 id, int side) {

	float value = lerpField(id, side);
	return  value >= 0 ? value : 0.0f;
}

[numthreads(8,8,8)]
void LerpField (uint3 id : SV_DispatchThreadID)
{
	Result[imageIndexing(id)] = float4(lerpForImage(id, xs), lerpForImage(id, ys), lerpForImage(id, zs), 0.0f);
}
